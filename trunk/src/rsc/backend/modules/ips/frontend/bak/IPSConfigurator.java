/*
 * IPSConfigurator.java
 *
 * Created on January 21, 2007, 9:17 PM
 */

/*
 * Copyright 2008 Marcel Richter
 * 
 * This file is part of RSC (Remote Service Configurator).
 *
 *  RSC is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  RSC is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
 */

package rsc.backend.modules.ips.frontend.bak;

import rsc.backend.modules.ips.frontend.*;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.filechooser.FileSystemView;
import javax.swing.filechooser.FileView;
import javax.swing.table.DefaultTableModel;
import rsc.CollectionListener;
import rsc.backend.modules.ips.IPS;
import rsc.backend.modules.ips.backend.IPSRule;

/**
 * 
 * @author marcel richter
 */
public class IPSConfigurator extends javax.swing.JPanel /*implements CollectionListener*/ {
    private IPSConfiguratorSnort snortConf;
    private DefaultTableModel dtm;
    private IPS ips;
    
    /** Creates new form IPSConfigurator */
    public IPSConfigurator(IPS ips) {
        this.ips=ips;
        //ips.addRulesListener(this);
        initComponents();

        String colNames[]={"","Rule Files"};

        dtm=new DefaultTableModel(colNames,0);
        t_conf.setModel(dtm);
        JFileChooser jfs;
        FileSystemView fsv;
        FileView fv;
        
    }
    
    public void refresh() {
        
    }
    
    public IPS getIPS() {
        return ips;
    }
    
    public void fireDisconnectEvent() {
        
    }
    
    public JPopupMenu getPopupMenu() {
        return pm_ips;
    }

    /*public void elementRemoved(Object element) {
        ruleData.clear();
        ruleData.add(ips.getRules());
        dtm.setDataVector(ruleData,colNames);
    }

    public void elementCanged(Object element) {
        ruleData.clear();
        ruleData.add(ips.getRules());
        dtm.setDataVector(ruleData,colNames);
    }

    public void elementAdded(Object element) {
        ruleData.clear();
        ruleData.add(ips.getRules());
        dtm.setDataVector(ruleData,colNames);
    }*/
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pm_ips = new javax.swing.JPopupMenu();
        mi_addRules = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        mi_removeModul = new javax.swing.JMenuItem();
        l_rule = new javax.swing.JLabel();
        sp_conf = new javax.swing.JScrollPane();
        t_conf = new javax.swing.JTable();
        b_add = new javax.swing.JButton();
        b_remove = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        b_save = new javax.swing.JButton();

        mi_addRules.setText("Item");
        pm_ips.add(mi_addRules);
        pm_ips.add(jSeparator1);

        mi_removeModul.setText("remove Modul");
        pm_ips.add(mi_removeModul);

        setLayout(new java.awt.GridBagLayout());

        l_rule.setText("Rule Files");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(l_rule, gridBagConstraints);

        sp_conf.setMinimumSize(new java.awt.Dimension(100, 100));
        sp_conf.setPreferredSize(new java.awt.Dimension(100, 100));

        t_conf.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rule Files"
            }
        ));
        t_conf.setPreferredSize(new java.awt.Dimension(15, 0));
        t_conf.setShowHorizontalLines(false);
        t_conf.setShowVerticalLines(false);
        sp_conf.setViewportView(t_conf);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(sp_conf, gridBagConstraints);

        b_add.setText("+");
        b_add.setMaximumSize(new java.awt.Dimension(43, 25));
        b_add.setMinimumSize(new java.awt.Dimension(43, 25));
        b_add.setPreferredSize(new java.awt.Dimension(43, 25));
        b_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_addActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        add(b_add, gridBagConstraints);

        b_remove.setText("-");
        b_remove.setMaximumSize(new java.awt.Dimension(43, 25));
        b_remove.setMinimumSize(new java.awt.Dimension(43, 25));
        b_remove.setPreferredSize(new java.awt.Dimension(43, 25));
        b_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_removeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        add(b_remove, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jSeparator2, gridBagConstraints);

        b_save.setText("Save Configuration");
        b_save.setToolTipText("stores the actual modul configuration on the system");
        b_save.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(b_save, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void b_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_removeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b_removeActionPerformed

    private void b_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_addActionPerformed
        String name="";
        IPSRule rule;
        Vector<IPSRule> vrule;
        name=JOptionPane.showInputDialog(this,"name","Name of Rules-File",JOptionPane.QUESTION_MESSAGE);
        //ips.addRule(rule=new IPSRule(ips,name));
        vrule=new Vector<IPSRule>();
        //vrule.add(rule);
        dtm.addRow(vrule);
        t_conf.updateUI();
    }//GEN-LAST:event_b_addActionPerformed
            
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_add;
    private javax.swing.JButton b_remove;
    private javax.swing.JButton b_save;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel l_rule;
    private javax.swing.JMenuItem mi_addRules;
    private javax.swing.JMenuItem mi_removeModul;
    private javax.swing.JPopupMenu pm_ips;
    private javax.swing.JScrollPane sp_conf;
    private javax.swing.JTable t_conf;
    // End of variables declaration//GEN-END:variables
    
}
